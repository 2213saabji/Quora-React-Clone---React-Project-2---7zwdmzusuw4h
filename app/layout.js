'use client'
import './globals.css'
import './(styles)/navbar.css'
import './(styles)/login.css'
import { useContext,createContext, useState, useEffect } from 'react'
import { Inter } from 'next/font/google'
import Navbar from "./(navbar)/navbar"
import { Box } from "@mui/material"
const inter = Inter({ subsets: ['latin'] })

export const metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
}

const MyContext=createContext();

export function allContext(){
  return useContext(MyContext);
}

export default function RootLayout({ children }) {

const [theme,settheme]=useState("light");
const [logintoken,setlogintoken]=useState(false);
const [blackscreen2,setblackscreen2]=useState(false);
const [loader,setloader]=useState(false);


function themecheck(val1, val2) {
  return theme === "light" ? val1 : val2
}

function closepopups(){
  setblackscreen2(false);
}

useEffect(()=>{
  if(typeof(localStorage.getItem("token"))=="string"){
    setlogintoken(true);
  }
  if(!localStorage.getItem("theme")){
    localStorage.setItem("theme","light");
  }
  else{
    settheme(localStorage.getItem("theme"));
  }
},[])
  return (
    <html lang="en">
      <body className={inter.className}>
       
      <MyContext.Provider value={{
        theme, settheme, 
        logintoken, setlogintoken, 
        loader, setloader,
        blackscreen2,setblackscreen2,
        themecheck,}}>
        <Box className={`wholewebsiteMaindiv ${themecheck("bklightwhite","bkblack")} posfix`} sx={{ width: "100%", display: "flex", alignItems: "center", flexDirection: "column", position: "relative" }}>
          <Box className={`${themecheck("boxshadowlgray","boxshadowblack")} ${themecheck("bkwhite", "bklightblack")}`} sx={{zIndex:"1000", width: "100%", display: "flex", justifyContent: "center" }}>
            <Box sx={{ maxWidth: "1250px", width: "100%" }}>
              <Navbar />
            </Box>
          </Box>
          <Box sx={{ maxWidth: "1250px", width: "100%"}} className={`mt20 ${logintoken?"posfix":""}`} >
            {children}
          </Box>
          {blackscreen2 && <div className={`blackscreen2`} onClick={()=>{closepopups()}}></div>}
        </Box>
        </MyContext.Provider>
      </body>
    </html>
  )
}
